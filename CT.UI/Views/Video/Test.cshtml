@model CT.UI.Models.VideoModel
@{
    Layout = null;
}

<script src="~/Scripts/jquery-1.7.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/Scripts/MyAjaxForm.js"></script>
<script src="~/Scripts/easyui-lang-zh_CN.js"></script>
<script type="text/javascript">
    //更换验证码
    function changeCheckCode() {
        $("#img").attr("src", $("#img").attr("src") + 1);
    }
    //注册 回调结果
    function afterResister(data) {
        var serverData = data.split(':');
        if (serverData[0] == "ok") {
            window.location.href = "/Account/Login"
        } else if (serverData[0] == "no") {
            $("#errorMsg").text(serverData[1]);
            changeCheckCode();
        } else {
            window.location.href = "/Error.html"
        }

    }
    $(function () {
        bindFileUpload();
    });
    //文件异步上传
    function bindFileUpload() {
        $("#btnUpload").click(function () {
            if ($("#imgIcon").val() == "") {
                $.messager.alert("提示", "请选择图片文件");
                return;
            }

            $("#registerForm").ajaxSubmit({
                type: 'post',
                url: '/Video/FileUpload',
                success: function (data) {
                    var serverData = data.split(':');
                    if (serverData[0] == "ok") {
                        $("#hidImage").attr("value", serverData[1]);//将服务端返回的图片路径赋给隐藏域
                        $("#menuIconShow").append("<img src='" + serverData[1] + "' width='40px' height='40px' />");
                    } else {
                        $.messager.alert("提示", "图片上传错误!");
                    }
                }
            });
        });
    }
    $(function () {
        bindFileUpload1();
    });
    //文件异步上传
    function bindFileUpload1() {
        $("#btnUploadVideo").click(function () {
            if ($("#videoIcon").val() == "") {
                $.alert("提示", "请选择文件");
                return;
            }

            $("#registerForm").ajaxSubmit({
                type: 'post',
                url: '/Video/FileUploadVideo',
                success: function (data) {
                    var serverData = data.split(':');
                    if (serverData[0] == "ok") {
                        $("#hidVideo").attr("value", serverData[1]);//将服务端返回的图片路径赋给隐藏域
                        $("#menuIconShow1").append("<img src='" + serverData[1] + "' width='40px' height='40px' />");
                    } else {
                        $.alert("提示", "上传错误!");
                    }
                }
            });
        });
    }
</script>

<div class="form-horizontal">
    @using (Ajax.BeginForm("Test", new { }, new AjaxOptions() { OnSuccess = "afterResister" }, new { id = "registerForm" }))
    {
        @*<form action="/Video/Create" method="post" enctype="multipart/form-data">*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("标题", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Video_Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Video_Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("封面", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="MenuIcon" id="imgIcon" />
                <input type="button" id="btnUpload" value="异步上传" />
                <input type="hidden" id="hidImage" name="Video_Img" />
                <div id="menuIconShow">
                </div>

                @Html.ValidationMessageFor(model => model.Video_Img, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("视频", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="MenuIcon1" id="videoIcon" />
                <input type="button" id="btnUploadVideo" value="异步上传视频" />
                <input type="hidden" id="hidVideo" name="Video_Url" />
                <div id="menuIconShow1">
                </div>
                @Html.ValidationMessageFor(model => model.Video_Url, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.Label("分类", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.VideoClass_ID, ViewBag.videoClass as SelectList, "请选择分类", new { @class = "btn btn-success dropdown-toggle form-control" })
                @Html.ValidationMessageFor(model => model.VideoClass_ID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="发布" />
            </div>
        </div>
        @*</form>*@
    }
</div>

@*<div class="form-bottom">
        @using (Ajax.BeginForm("Test", new { }, new AjaxOptions() { OnSuccess = "afterResister" }, new { id = "registerForm" }))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <h4>用户名：</h4>

                @Html.EditorFor(u => u.User_Name, new { @class = "form-first-name form-control" })
                @Html.ValidationMessageFor(u => u.User_Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <h4>密码：</h4>

                @Html.EditorFor(u => u.User_Password, new { @class = "form-first-name form-control" })
                @Html.ValidationMessageFor(u => u.User_Password, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <h4>邮箱：</h4>
                @Html.EditorFor(u => u.User_Email, new { @class = "form-first-name form-control" })
                @Html.ValidationMessageFor(u => u.User_Email, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <h4>电话：</h4>
                @Html.EditorFor(u => u.User_Phone, new { @class = "form-first-name form-control" })
                @Html.ValidationMessageFor(u => u.User_Phone, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <h4>头像：</h4>
                <input type="file" name="MenuIcon" id="imgIcon" /><input type="button" id="btnUpload" value="异步上传" />
                <input type="hidden" id="hidImage" name="User_Img" />
                <div id="menuIconShow">
                </div>
            </div>
            <div class="form-group">
                <h4>验证码：</h4>
                <input type="text" class="login-text" id="code" name="vCode" value="1" />

                <img id="img" src="/Account/ValidateCode/?id=1" style=" height: 48px;" />
                <div style="float: left; margin-left: 5px; margin-top: 10px;">
                    <a href="javascript:void(0)" onclick="changeCheckCode();return false;">看不清，换一张</a>
                </div>
            </div>
            <button type="submit" class="btn">注册</button>
        }
    </div>*@

